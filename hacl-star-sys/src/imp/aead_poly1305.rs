/* automatically generated by rust-bindgen */

pub type __uint8_t = crate::libc::c_uchar;
pub type __int32_t = crate::libc::c_int;
pub type __uint32_t = crate::libc::c_uint;
pub type __uint64_t = crate::libc::c_ulong;

pub type Prims_nat = i32;

pub type Prims_int = i32;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Hacl_Impl_Poly1305_64_State_poly1305_state {
    pub r: *mut u64,
    pub h: *mut u64,
}
#[test]
fn bindgen_test_layout_Hacl_Impl_Poly1305_64_State_poly1305_state() {
    assert_eq!(
        ::core::mem::size_of::<Hacl_Impl_Poly1305_64_State_poly1305_state>(),
        16usize,
        concat!(
            "Size of: ",
            stringify!(Hacl_Impl_Poly1305_64_State_poly1305_state)
        )
    );
    assert_eq!(
        ::core::mem::align_of::<Hacl_Impl_Poly1305_64_State_poly1305_state>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(Hacl_Impl_Poly1305_64_State_poly1305_state)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::core::ptr::null::<Hacl_Impl_Poly1305_64_State_poly1305_state>())).r as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(Hacl_Impl_Poly1305_64_State_poly1305_state),
            "::",
            stringify!(r)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::core::ptr::null::<Hacl_Impl_Poly1305_64_State_poly1305_state>())).h as *const _
                as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(Hacl_Impl_Poly1305_64_State_poly1305_state),
            "::",
            stringify!(h)
        )
    );
}
pub type AEAD_Poly1305_64_uint8_p = *mut u8;
pub type AEAD_Poly1305_64_key = *mut u8;
extern "C" {
    pub fn AEAD_Poly1305_64_seval(b: *mut crate::libc::c_void) -> Prims_nat;
}
extern "C" {
    pub fn AEAD_Poly1305_64_selem(s: *mut crate::libc::c_void) -> Prims_int;
}
pub type AEAD_Poly1305_64_state = Hacl_Impl_Poly1305_64_State_poly1305_state;
extern "C" {
    pub fn AEAD_Poly1305_64_mk_state(
        r: *mut u64,
        acc: *mut u64,
    ) -> Hacl_Impl_Poly1305_64_State_poly1305_state;
}
extern "C" {
    pub fn AEAD_Poly1305_64_mul_div_16(len1: u32) -> u32;
}
extern "C" {
    pub fn AEAD_Poly1305_64_pad_last(
        st: Hacl_Impl_Poly1305_64_State_poly1305_state,
        input: *mut u8,
        len1: u32,
    );
}
extern "C" {
    pub fn AEAD_Poly1305_64_poly1305_blocks_init(
        st: Hacl_Impl_Poly1305_64_State_poly1305_state,
        input: *mut u8,
        len1: u32,
        k1: *mut u8,
    );
}
extern "C" {
    pub fn AEAD_Poly1305_64_poly1305_blocks_continue(
        st: Hacl_Impl_Poly1305_64_State_poly1305_state,
        input: *mut u8,
        len1: u32,
    );
}
extern "C" {
    pub fn AEAD_Poly1305_64_poly1305_blocks_finish_(
        st: Hacl_Impl_Poly1305_64_State_poly1305_state,
        input: *mut u8,
    );
}
extern "C" {
    pub fn AEAD_Poly1305_64_poly1305_blocks_finish(
        st: Hacl_Impl_Poly1305_64_State_poly1305_state,
        input: *mut u8,
        mac: *mut u8,
        key_s: *mut u8,
    );
}
